package com.example.emotionharmony.utils;

import android.content.Context;
import android.util.Log;
import java.io.IOException;
import java.io.InputStream;
import java.util.Properties;

/**
 * Classe respons√°vel por carregar vari√°veis de ambiente do arquivo `config.env` localizado na pasta assets.
 */
public class EnvConfig {
    // Inst√¢ncia √∫nica de Properties usada para armazenar as vari√°veis carregadas
    private static final Properties properties = new Properties();

    /**
     * Bloco: Carregamento do arquivo de ambiente
     * Fun√ß√£o: Abre e l√™ o arquivo config.env da pasta assets e carrega as vari√°veis no objeto Properties.
     */
    public static void load(Context context) {
        try {
            Log.d("EnvConfig", "üîç Tentando carregar o arquivo config.env de assets...");

            // Abre o arquivo config.env dentro da pasta assets
            InputStream inputStream = context.getAssets().open("config.env");

            // Verifica se o arquivo foi realmente carregado
            if (inputStream == null) {
                Log.e("EnvConfig", "‚ùå Erro: Arquivo config.env n√£o encontrado!");
                return;
            }

            // Carrega o conte√∫do do arquivo no objeto Properties
            properties.load(inputStream);
            inputStream.close();

            Log.d("EnvConfig", "‚úÖ Arquivo config.env carregado com sucesso.");
        } catch (IOException e) {
            // Em caso de erro na leitura do arquivo
            Log.e("EnvConfig", "‚ùå Erro ao carregar o arquivo config.env: " + e.getMessage());
        }
    }

    /**
     * Bloco: Recupera√ß√£o de vari√°veis de ambiente
     * Fun√ß√£o: Retorna o valor da vari√°vel solicitada, eliminando aspas caso existam.
     *
     * @param key Nome da vari√°vel de ambiente
     * @return Valor da vari√°vel de ambiente (ou string vazia se n√£o encontrada)
     */
    public static String get(String key) {
        // Recupera o valor da vari√°vel e elimina espa√ßos em branco
        String value = properties.getProperty(key, "").trim();

        // Remove aspas duplas caso o valor esteja entre elas
        if (value.startsWith("\"") && value.endsWith("\"")) {
            value = value.substring(1, value.length() - 1);
        }

        // Loga a vari√°vel acessada
        Log.d("EnvConfig", "üîπ Vari√°vel " + key + ": " + value);
        return value;
    }
}
