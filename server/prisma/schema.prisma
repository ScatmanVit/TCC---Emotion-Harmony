generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model tb_users {
  id_user                 Int       @id @default(autoincrement())
  name_user               String    @db.VarChar(100)
  email_user              String    @unique @db.VarChar(50)
  cpf_user                String    @unique @db.VarChar(11)
  sleep_time_start    DateTime?
  sleep_time_end      DateTime?
  sleep_time_duration Int?
  password_user           String    @db.VarChar(255)
  password_changed        Boolean   @default(false)
  lost_pasword_token_user String?   @db.VarChar(255)
  active_user             Boolean   @default(true)
  type_user               Type_user @default(user)
  last_login_date_user    DateTime?
  created_at              DateTime  @default(now())
  updated_at              DateTime  @updatedAt
  weight_user             Float?
  phone_user            tb_phone[]
  today_user            tb_today[]
  meditation_user       tb_meditation[]
  breath_user           tb_breath[]
  habits_user           tb_habits[]
}

model tb_phone {
  id_phone           Int           @id @default(autoincrement())
  type_phone         Type_contacts @default(celular)
  country_code_phone Int           @default(55)
  area_code_phone    Int
  phone_number       Int
  users_id           Int
  users_phone       tb_users?     @relation(fields: [users_id], references: [id_user])
  created_at         DateTime      @default(now())
  updated_at         DateTime      @updatedAt

  @@index([users_id], map: "tb_phone_users_id_fkey")
}

model tb_today {
  id_today                  Int                                @id @default(autoincrement())
  emotion_today             Type_emotion
  description_today         String?                            @db.Text
  morning_afternoon_evening tb_today_morning_afternoon_evening
  users_id                  Int
  users_today              tb_users?                          @relation(fields: [users_id], references: [id_user])
  created_at                DateTime                           @default(now())
  updated_at                DateTime                           @updatedAt

  @@index([users_id], map: "tb_today_users_id_fkey")
}

model tb_meditation {
  id_meditation             Int            @id @default(autoincrement())
  description_meditation    String         @db.Text
  think_today_meditation    String         @db.Text
  emotion_meditation        Type_emotion
  caracter_meditation       String         @db.Text
  type_situation_meditation type_situation
  users_id                  Int
  users_meditation         tb_users?      @relation(fields: [users_id], references: [id_user])
  created_at                DateTime       @default(now())
  updated_at                DateTime       @updatedAt

  @@index([users_id], map: "tb_meditation_users_id_fkey")
}

model tb_breath {
  id_breath           Int      @id @default(autoincrement())
  finished_breath     Boolean  @default(true)
  felt_betther_breath Boolean  @default(true)
  description_breath  String   @db.Text
  users_id            Int
  users_breath       tb_users? @relation(fields: [users_id], references: [id_user])
  created_at          DateTime @default(now())
  updated_at          DateTime @updatedAt

  @@index([users_id], map: "tb_breath_users_id_fkey")
}

model tb_habits {
  id_habit            Int                  @id @default(autoincrement())
  name_habit          String              @db.VarChar(50)
  last_time_habit    DateTime?
  users_id            Int
  users_habits       tb_users?           @relation(fields: [users_id], references: [id_user])
  created_at          DateTime             @default(now())
  updated_at          DateTime

  @@index([users_id], map: "tb_habits_users_id_fkey")
}
enum Type_user {
  user
  admin
}

enum Type_contacts {
  casa
  trabalho
  celular
  emergencia
}

enum Type_emotion {
  Felicidade
  Tristeza
  Raiva
  Desgosto
  Medo
}

enum type_situation {
  boa
  ruim
}

enum tb_today_morning_afternoon_evening {
  manh√£
  tarde
  noite
}
