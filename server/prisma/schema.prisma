// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Type_user {
  user
  therapist
  admin
}

enum Type_contacts {
  home
  work
  mobile
  office
  clinic
  emergency
}

enum Type_emotion {
  Felicidade
  Tristeza
  Raiva
  Desgosto
  Medo
}

enum type_situation {
  good
  bad
}

enum Type_day {
  morning
  afternoon
  evening
}

model tb_users {
  id_user                 Int             @id @default(autoincrement())
  name_user               String          @db.VarChar(100)
  email_user              String          @unique @db.VarChar(50)
  cpf_user                String          @unique @db.VarChar(11)
  password_user           String          @db.VarChar(255)
  lost_pasword_token_user String?         @db.VarChar(255)
  active_user             Boolean         @default(true)
  type_user               Type_user       @default(user)
  phones_user             tb_phone[]
  meditations_user        tb_meditation[]
  breaths_user            tb_breath[]
  todays_user             tb_today[]
  created_at              DateTime        @default(now())
  updated_at              DateTime        @updatedAt
}

model tb_phone {
  id_phone           Int           @id @default(autoincrement())
  type_phone         Type_contacts @default(mobile)
  country_code_phone Int           @default(55)
  area_code_phone    Int
  phone_number       Int
  users_id           Int
  users              tb_users      @relation(fields: [users_id], references: [id_user], onDelete: Cascade)
  created_at         DateTime      @default(now())
  updated_at         DateTime      @updatedAt
}

model tb_today {
  id_today                  Int          @id @default(autoincrement())
  emotion_today             Type_emotion
  description_today         String?      @db.Text
  morning_afternoon_evening Type_day
  users_id                  Int
  users                     tb_users     @relation(fields: [users_id], references: [id_user], onDelete: Cascade)
  created_at                DateTime     @default(now())
  updated_at                DateTime     @updatedAt
}

model tb_meditation {
  id_meditation             Int            @id @default(autoincrement())
  description_meditation    String         @db.Text
  think_today_meditation    String         @db.Text
  emotion_meditation        Type_emotion
  caracter_meditation       String         @db.Text
  type_situation_meditation type_situation
  felt_after_meditation     String         @db.Text
  users_id                  Int
  users                     tb_users       @relation(fields: [users_id], references: [id_user], onDelete: Cascade)
  created_at                DateTime       @default(now())
  updated_at                DateTime       @updatedAt
}

model tb_breath {
  id_breath           Int      @id @default(autoincrement())
  finished_breath     Boolean  @default(true)
  felt_betther_breath Boolean  @default(true)
  description_breath  String   @db.Text
  users_id            Int
  users               tb_users @relation(fields: [users_id], references: [id_user], onDelete: Cascade)
  created_at          DateTime @default(now())
  updated_at          DateTime @updatedAt
}
