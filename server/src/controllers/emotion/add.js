// ğŸ“¦ ImportaÃ§Ã£o do Prisma Client para acesso ao banco de dados
const { prisma } = require("../../prismaFunctions/prisma");

// ğŸ”§ Controlador para registrar uma nova emoÃ§Ã£o do usuÃ¡rio
async function addEmotion(req, res) {
  try {
    // ğŸ”¹ Extrai o ID do usuÃ¡rio autenticado
    const { id_user } = req.user;

    // ğŸ”¹ Extrai os dados enviados no corpo da requisiÃ§Ã£o
    const { emotion, description, day_time } = req.body;

    // ğŸ”¹ Verifica se os campos obrigatÃ³rios foram informados
    if (!emotion || !day_time) throw new CustomError("Dados incompletos", 400);

    // ğŸ”¹ Insere uma nova emoÃ§Ã£o na tabela `tb_today`
    await prisma.tb_today.create({
      data: {
        users_id: Number(id_user),
        emotion_today: emotion,
        description_today: description,
        morning_afternoon_evening: day_time,
      },
    });

    // ğŸ”¹ Retorna resposta de sucesso
    return res.status(201).json({ message: "EmoÃ§Ã£o adicionada com sucesso" });
  } catch (error) {
    // ğŸ”¹ Tratamento de erros
    console.error({ error });

    return res.status(error.status || 500).json({ error: error.message });
  }
}

// ğŸš€ Exporta a funÃ§Ã£o para uso nas rotas
module.exports = addEmotion;
